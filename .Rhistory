ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity")
# library(reshape2)
# ggplot(data=data,aes(x=Week))+
#   geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow2',color='lightblue4') +
#   geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green2',color='red')
dat <- read.xlsx("Book2.xlsx",sheetName = "Sheet1")
dat$Week <- as.factor(dat$Week)
library(reshape2)
library(ggplot2)
DF1 <- melt(dat, id.var="Week")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "identity")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "identity")
# library(reshape2)
# ggplot(data=data,aes(x=Week))+
#   geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow2',color='lightblue4') +
#   geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green2',color='red')
dat <- read.xlsx("Book2.xlsx",sheetName = "Sheet1")
dat$Week <- as.factor(dat$Week)
dat$Total...Tested <- NULL
library(reshape2)
library(ggplot2)
DF1 <- melt(dat, id.var="Week")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "identity")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "identity", alpha=.3)
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack", alpha=.3)
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack", alpha=.9)
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack")
ggplot(DF1, aes(x = Week, y = value, fill = Variable)) +
geom_bar(stat = "identity",position = "stack")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack")
dat$A.unable.to.sub.type. <- NULL
library(reshape2)
library(ggplot2)
DF1 <- melt(dat, id.var="Week")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue"))
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="green"))
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="darkgreen"))
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "darkyellow", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="darkgreen"))
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow3", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="darkgreen"))
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow3", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="green3"))
dat <- read.xlsx("Book2.xlsx",sheetName = "Sheet1")
dat$Week <- as.factor(dat$Week)
dat$Total...Tested <- NULL
dat$A.unable.to.sub.type. <- NULL
library(reshape2)
library(ggplot2)
DF1 <- melt(dat, id.var="Week")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow3", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="green3"))
library(reshape2)
library(ggplot2)
dat <- read.xlsx("Book2.xlsx",sheetName = "Sheet1")
dat$Week <- as.factor(dat$Week)
dat$Total...Tested <- NULL
dat$A.unable.to.sub.type. <- NULL
DF1 <- melt(dat, id.var="Week")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow3", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="green3"))
library(reshape2)
library(ggplot2)
dat <- read.xlsx("Book2.xlsx",sheetName = "Sheet1")
dat$Week <- as.factor(dat$Week)
dat$Total...Tested <- NULL
dat$A.unable.to.sub.type. <- NULL
DF1 <- melt(dat, id.var="Week")
ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
geom_bar(stat = "identity",position = "stack") +
scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow3", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="green3"))
library(reshape2)
ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow2',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green2',color='red')
#
# library(reshape2)
# library(ggplot2)
#
# dat <- read.xlsx("Book2.xlsx",sheetName = "Sheet1")
# dat$Week <- as.factor(dat$Week)
# dat$Total...Tested <- NULL
# dat$A.unable.to.sub.type. <- NULL
# DF1 <- melt(dat, id.var="Week")
#
# ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
#   geom_bar(stat = "identity",position = "stack") +
# scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow3", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="green3"))
#
data <- read.xlsx("Book1.xlsx",sheetName = "Sheet1")
ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow2',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green2',color='red')
data$Week <- as.factor(data$Week)
ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow2',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green2',color='red')
ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow2',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green2',color='lightblue4')
ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow3',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green3',color='lightblue4')
library(ggplot2)
library(gtable)
library(grid)
library(extrafont)
install.packages("extrafont")
library(extrafont)
# dat <- read.xlsx("Book2.xlsx",sheetName = "Sheet1")
# dat$Week <- as.factor(dat$Week)
# dat$Total...Tested <- NULL
# dat$A.unable.to.sub.type. <- NULL
# DF1 <- melt(dat, id.var="Week")
#
# ggplot(DF1, aes(x = Week, y = value, fill = variable)) +
#   geom_bar(stat = "identity",position = "stack") +
# scale_fill_manual("legend", values = c("A.H3N2v." = "blue","A..H1N1.pdm09" = "orange", "A.H3." = "red", "A.Subtyping.not.performed." = "yellow3", "B" = "lightblue", "BVIC"="lightgreen", "BYAM"="green3"))
#
x
p1 <- ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow3',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green3',color='lightblue4')
library(reshape2)
library(ggplot2)
library(gtable)
library(grid)
library(extrafont)
data <- read.xlsx("Book1.xlsx",sheetName = "Sheet1")
data$Week <- as.factor(data$Week)
p1 <- ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow3',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green3',color='lightblue4')
p2 <- ggplot(data, aes(x=Week)) +
geom_line(aes(y = Percent.Positive.A, colour = "var0")) +
geom_line(aes(y = Percent.Positive.B, colour = "var1")) +
geom_line(aes(y = X..Positive, colour = "black"))
p2
p2 <- ggplot(data, aes(x=Week, group=1)) +
geom_line(aes(y = Percent.Positive.A, colour = "var0")) +
geom_line(aes(y = Percent.Positive.B, colour = "var1")) +
geom_line(aes(y = X..Positive, colour = "black"))
p2
p2 <- ggplot(data, aes(x=Week, group=1)) +
geom_line(aes(y = Percent.Positive.A, colour = "yellow3")) +
geom_line(aes(y = Percent.Positive.B, colour = "green3")) +
geom_line(aes(y = X..Positive, colour = "black"))
p2
p2 <- ggplot(data, aes(x=Week, group=1)) +
geom_line(aes(y = Percent.Positive.A, color = "yellow3")) +
geom_line(aes(y = Percent.Positive.B, color = "green3")) +
geom_line(aes(y = X..Positive, color = "black"))
p2
p2 <- ggplot(data, aes(x=Week, group=1)) +
geom_line(aes(y = Percent.Positive.A, fill = "yellow3")) +
geom_line(aes(y = Percent.Positive.B, fill = "green3")) +
geom_line(aes(y = X..Positive, fill = "black"))
colour
p2 <- ggplot(data, aes(x=Week, group=1)) +
geom_line(aes(y = Percent.Positive.A, colour = "yellow3")) +
geom_line(aes(y = Percent.Positive.B, colour = "green3")) +
geom_line(aes(y = X..Positive, colour = "black"))
p2
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
s-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
data <- read.xlsx("Book1.xlsx",sheetName = "Sheet1")
data$Week <- as.factor(data$Week)
p1 <- ggplot(data=data,aes(x=Week))+
geom_bar(aes(y=Total.A),stat="identity",position ="identity",fill='yellow3',color='lightblue4') +
geom_bar(aes(y=Total.B),stat="identity",position ="identity",fill='green3',color='lightblue4')
p2 <- ggplot(data, aes(x=Week, group=1)) +
geom_line(aes(y = Percent.Positive.A, colour = "yellow3")) +
geom_line(aes(y = Percent.Positive.B, colour = "green3")) +
geom_line(aes(y = X..Positive, colour = "black"))
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g
ggsave("plot.pdf", g1, width=5, height=5)
ggsave("plot.pdf", g, width=5, height=5)
df <- read.xlsx("state.xlsx",sheetName = "Sheet1")
df <- read.csv("state.csv",sheetName = "Sheet1")
df <- read.csv("state.csv")
df
df$STATENAME <- tolower(df$STATENAME)
df
df$STATENAME
library(maps)
library(ggplot2)
states <- map_data("state")
states
map.df <- merge(states,x, by="region", all.x=T)
map.df <- merge(states,df, by="region", all.x=T)
map.df <- merge(states,df, by="region", all.df=T)
map.df <- merge(states,df, by="STATENAME", all.df=T)
df <- read.csv("state.csv")
library(ggplot2)
# We load the geospatial data for the states
# (there are more options to the map_data function,
# if you are intrested in taking a look).
states <- map_data("state")
# Here I'm creating a sample dataset like yours.
# The dataset will have 2 columns: The region (or state)
# and a number that will represent the value that you
# want to plot (here the value is just the numerical order of the states).
sim_data <- data.frame(region=unique(states$region), Percent.Turnout=match(unique(states$region), unique(states$region)))
# Then we merge our dataset with the geospatial data:
sim_data_geo <- merge(states, sim_data, by="region")
# The following should give us the plot without the numbers:
qplot(long, lat, data=sim_data_geo, geom="polygon", fill=Percent.Turnout, group=group)
df
map_data
map_data()
?map_data()
df
library(stringr)
str_split_fixed(before$type, "_and_", 2)
library(stringr))
library(stringr)
str_split_fixed(df$ACTIVITY.LEVEL, " ", 2)
dataa <- str_split_fixed(df$ACTIVITY.LEVEL, " ", 2)
dataa$2
data[2]
dataa[2]
dataa
class(dataa)
dataa[,1]
dataa[1,]
dataa[,0]
dataa[,2]
df$activity <- as.numeric(dataa[,2])
df
df <- read.csv("state.csv")
act_split <- str_split_fixed(df$ACTIVITY.LEVEL, " ", 2)
df$activity <- act_splitp[,2]
df$activity <- act_split[,2]
dataa <- str_split_fixed(df$ACTIVITY.LEVEL, " ", 2)
df
df["activity"]
df["STATENAME","activity"]
data.frame(df$STATENAME,df$activity)
mapdata <- data.frame(df$STATENAME,df$activity)
mapdata$df.STATENAME <- tolower(mapdata$df.STATENAME)
mapdata
map_data
map_data(df)
map_data(mapdata$df.STATENAME)
states <- map_data("state")
states
mapdata
colnames(mapdata)
colnames(mapdata) <- c("state","activity")
mapdata
df <- read.csv("state.csv")
act_split <- str_split_fixed(df$ACTIVITY.LEVEL, " ", 2)
df$activity <- act_split[,2]
mapdata <- data.frame(df$STATENAME,df$activity)
mapdata$df.STATENAME <- tolower(mapdata$df.STATENAME)
colnames(mapdata) <- c("state","activity")
colnames(mapdata) <- c("state","activity")
mapdata
GeoStates <- gvisGeoChart(mapdata, "state", "activity",
options=list(region="US",
displayMode="regions",
resolution="provinces",
width=600, height=400))
install.packages("googleVis")
GeoStates <- gvisGeoChart(mapdata, "state", "activity",
options=list(region="US",
displayMode="regions",
resolution="provinces",
width=600, height=400))
require(googleVis)
GeoStates <- gvisGeoChart(mapdata, "state", "activity",
options=list(region="US",
displayMode="regions",
resolution="provinces",
width=600, height=400))
GeoStates <- gvisGeoChart(mapdata, "state", "activity",
options=list(region="US",
displayMode="regions",
resolution="provinces",
width=600, height=400))
plot(GeoStates)
gvisGeoChart(mapdata, "state", "activity",
options=list(region="US",
displayMode="regions",
resolution="provinces",
width=600, height=400))
?gvisGeoChart(mapdata, "state", "activity",
options=list(region="US",
displayMode="regions",
resolution="provinces",
width=600, height=400))
install.packages("twitteR")
require("twitteR")
twitteR::setup_twitter_oauth("CKuP9VUXhKVBmUR4MewoRxeoI","A4EohnxM0wZ45Bb12KW79IblyRp4nsbNU2HjtwnFrrutNRg2IB","	1405595161-sOkfPJofHrjMPlhF9h67E9hxcq3WrAHCqJBjxVl","EXjiyaCSac1iDXx6DRCalb0Of60gbsmTnsea3QY8kg8O8")
twitteR::setup_twitter_oauth(consumer_key = CKuP9VUXhKVBmUR4MewoRxeoI)
twitteR::setup_twitter_oauth(consumer_key = "CKuP9VUXhKVBmUR4MewoRxeoI")
twitteR::setup_twitter_oauth(consumer_key = "CKuP9VUXhKVBmUR4MewoRxeoI", consumer_secret = "A4EohnxM0wZ45Bb12KW79IblyRp4nsbNU2HjtwnFrrutNRg2IB", access_token = "1405595161-sOkfPJofHrjMPlhF9h67E9hxcq3WrAHCqJBjxVl", access_secret = "EXjiyaCSac1iDXx6DRCalb0Of60gbsmTnsea3QY8kg8O8")
twitteR::id()
twitteR::mentions()
twitteR::mentions()
?twitteR::searchTwitteR()
twitteR::searchTwitteR("influenza",n=1e4,since="2017-8-1",retryOnRateLimit = 1e3)
dataframe <- twitteR::twListToDF(twitteR::searchTwitteR("influenza",n=1e4,since="2017-8-1",retryOnRateLimit = 1e3))
dataframe
colnames(dataframe)
write.xlsx(dataframe, file, sheetName="Sheet1")
write.xlsx(dataframe, "tweets.xlsx", sheetName="Sheet1")
data.frame(dataframe$screenName)
nameframe <- data.frame(dataframe$screenName)
colnames(nameframe) <- c("screenName")
nameframe$screenName
nameframe <- data.frame(dataframe$screenName)
nameframe
?lookupUsers()
lookupUsers(nameframe$dataframe.screenName)
getUser("oartaza")
?getUser("oartaza")
ortaza <- getUser("oartaza")
ortaza
lookupUsers(nameframe$dataframe.screenName)
temp <- twListToDF(lookupUsers(dataframe$screenName))
temp
colnames(temp)
temp$location
colnames(temp)
colnames(dataframe)
geocode
twitteR::geocode
install.packages("dismo")
install.packages("maps")
install.packages("maps")
geocode
temp
nameframe
length(nameframe)
length(nameframe$dataframe.screenName)
length(temp$name)
temp
temp$name
temp$description
temp$screenName
geocode("texas")
install.packages
install.packages()
install.packages('ggmap')
geocode
geodata <- ggmap::geocode(temp$location[!is.na(temp$location)])
temp$location[!is.na(temp$location)]
temp
write.xlsx(temp,"userdata.xlsx",sheetName = "Sheet1")
dataframe
colnames(dataframe)
length(dataframe$id)
tweets <- dataframe
colnames(temp)
duplicated(temp$screenName)
unique(duplicated(temp$screenName))
users <- temp
colnames(tweet)
colnames(tweets)
colnames(users)
users[!is.na(users$location)]
users$location[!is.na(users$location)]
clean <- users$location[!is.na(users$location)]
length(clean)
length(users$location)
clean <- users$location[!(users$location == "")]
length(clean)
clean
users[!(users$location == "")]
?subset(users, )
?subset(users, !(users$location == ""))
subset(users, !(users$location == ""))
subset_users <- subset(users, !(users$location == ""))
subset_users$location
length(subset_users$location)
length(clean)
as.factor(subset_users$location)
?as.factor(subset_users$location)
Encoding(mydataframe[[col]]) <- "UTF-8"}
?as.factor(subset_users$location)
library(stringi)
subset_users$location <- stri_conv(subset_users$location, to="utf-8")
subset_users$location
subset_users$location <- stri_conv(subset_users$location, ",to="utf-8")
subset_users$location <- stri_conv(subset_users$location, "",to="utf-8")
subset_users$location
subset_users$location <- stri_conv(subset_users$location, "",to="ascii")
subset_users$location
subset_users$location <- stri_conv(subset_users$location, "",to="utf-8")
subset_users$location
subset_users$location <- stri_conv(subset_users$location, "",to="utf-16")
subset_users$location <- stri_conv(subset_users$location, "",to="ascii")
subset_users$location
subset_users$location <- stri_conv(subset_users$location, "",to="ascii")
geocode
library(dplyr)
geocode
geocode()
library(ggmap)
geocode()
?geocode()
mutate_geocode(subset_users,location = location)
mutate_geocode(subset_users,location = location)
geocode(subset_users$location[:2400])
geocode(subset_users$location[0:2400])
View(dataframe)
View(dataframe)
View(dataframe)
View(dataframe)
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
print(i)
}
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
print(i)
print(i - 2499)
}
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
#print(i)
print(i - 2499)
}
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
print(i,i-2499)
print(i - 2499)
}
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
print(i)
print("Start")
print(i - 2499)
}
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
print(i -2499 + "End: " + i )
print("Start")
print(i - 2499)
}
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
print(as.factor(i -2499) + "End: " + as.factor(i) )
print("Start")
print(i - 2499)
}
for(i in seq(from=2499, to=9999, by=2500)){
#  stuff, such as
print(as.factor(i -2499) + "End: " + as.factor(i) )
print("Start")
print(i - 2499)
}
a
a <- []
for(i in seq(from=2499, to=length(subset_users$location) - 1, by=2500)){
a <- a + geocode(subset_users$location[i-2499:i])
}
df_total <- data.frame()
for(i in seq(from=2499, to=length(subset_users$location) - 1, by=2500)){
a <- geocode(subset_users$location[i-2499:i])
df_total <- rbind(df_total,a)
}
library(ggmap)
for(i in seq(from=2499, to=length(subset_users$location) - 1, by=2500)){
a <- geocode(subset_users$location[i-2499:i])
df_total <- rbind(df_total,a)
}
subset_users$location
